// Skylighting ===========
// Currently using Pandoc's highlighting script:
// - @link: https://github.com/jgm/skylighting
// - @link: https://stackoverflow.com/a/30884409
//
// #!: Base --font-color inherited from `dark.less`
// #!: Set some defaults and remove code if possible
// #!: A lot of repetition of sourceCode class ... why?
// #!: Should be `--code-color-dark-key` but Monokai-sublime uses pink


div.sourceCode {
  // pass
}

pre.sourceCode {
  // pass

  .numberSource {
    margin-left: 3em;
    padding-left: 4px;
    border-left: 1px solid #aaaaaa;

    code {
      counter-reset: source-line 0;

      > span {
        position: relative;
        left: -4em;
        counter-increment: source-line;

        > a:first-child::before {
          content: counter(source-line);
          position: relative;
          left: -1em;
          display: inline-block;
          width: 4em;
          padding: 0 4px;
          color: #aaaaaa;
          text-align: right;
          vertical-align: baseline;
          border: none;

          -webkit-touch-callout: none; -webkit-user-select: none;
          -khtml-user-select: none; -moz-user-select: none;
          -ms-user-select: none; user-select: none;
        }
      }
    }
  }
}

code.sourceCode {
  // pass

  & > span {
    &:empty {
      // #! was a set height
    }

    & > a:first-child::before {
      text-decoration: underline;  // #! Dunno what this does
    }
  }
}

.sourceCode {
  // Alert
  .al { color: var(--color-code-dark-error); font-weight: bold; }
  // Annotation
  .an { color: var(--color-code-dark-comment); font-weight: bold; font-style: italic; }
  // Attribute
  .at { color: var(--color-code-dark-variable); }
  // BaseN
  .bn { color: var(--color-code-dark-number); }
  // BuiltIn
  .bu { }
  // ControlFlow
  .cf { color: var(--color-code-dark-variable); font-weight: bold; }
  // Char
  .ch { color: var(--color-code-dark-string); }
  // Constant
  .cn { color: var(--color-code-dark-keyword); }
  // Comment
  .co { color: var(--color-code-dark-comment); }
  // CommentVar
  .cv { color: var(--color-code-dark-comment); font-weight: bold; font-style: italic; }
  // Documentation
  .do { color: var(--color-code-dark-keyword); font-style: italic; }
  // DataType
  .dt { color: var(--color-code-dark-keyword); }
  // DecVal
  .dv { color: var(--color-code-dark-number); }
  // Error
  .er { color: var(--color-code-dark-error); font-weight: bold; }
  // Extension
  .ex { }
  // Float
  .fl { color: var(--color-code-dark-number); }
  // Function
  .fu { color: var(--color-code-dark-variable); }
  // Import
  .im { }
  // Information
  .in { color: var(--color-code-dark-comment); font-weight: bold; font-style: italic; }
  // Keyword
  .kw { color: var(--color-code-dark-operator); font-weight: bold; }  // #!
  // Operator
  .op { color: var(--color-code-dark-operator); }
  // Other
  .ot { color: var(--color-code-dark-variable); }
  // Preprocessor
  .pp { color: var(--color-code-dark-lowlight); }
  // SpecialChar
  .sc { color: var(--color-code-dark-string); }
  // SpecialString
  .ss { color: var(--color-code-dark-string); }
  // String
  .st { color: var(--color-code-dark-string); }
  // Variable
  .va { color: var(--color-code-dark-variable); }
  // VerbatimString
  .vs { color: var(--color-code-dark-string); }
  // Warning
  .wa { color: var(--color-code-dark-comment); font-weight: bold; font-style: italic; }
}


// #! ======
// .sourceCode { overflow: visible; }
@media screen {
// div.sourceCode { overflow: auto; }
}
@media print {
// code.sourceCode { white-space: pre-wrap; }
}
// #! ======